
package consultamensaje.consultas.backing.view;

import java.net.MalformedURLException;
import java.net.URL;

import javax.faces.context.FacesContext;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140319.1121
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "MensajesWS", targetNamespace = "http://view.backing.consultas.consultaMensaje/",
                  wsdlLocation =
                  "http://appsoasdesa.tarjetanevada.com.ar/consultasnevada/MensajesWSSoap12HttpPort?WSDL#%7Bhttp%3A%2F%2Fview.backing.consultas.consultaMensaje%2F%7DMensajesWS")
public class MensajesWS_Service extends Service {

    private final static URL MENSAJESWS_WSDL_LOCATION;
    private final static WebServiceException MENSAJESWS_EXCEPTION;
    private final static QName MENSAJESWS_QNAME =
        new QName("http://view.backing.consultas.consultaMensaje/", "MensajesWS");

    static {
        URL url = null;
        URL urlBase = MensajesWS_Service.class.getResource(".");
        WebServiceException e = null;
        String servidor = FacesContext.getCurrentInstance().getExternalContext().getRequestServerName();
        String contexto = FacesContext.getCurrentInstance().getExternalContext().getRequestContextPath().replaceAll("/", "");
        String systemId = null;        
        try {
            if(servidor.equalsIgnoreCase("apps.tarjetanevada.com.ar")){
                systemId = "http://MensajesPortProd";
            }else if(servidor.equalsIgnoreCase("appsoasdesa.tarjetanevada.com.ar") && contexto.contains("clon04")){
                systemId = "http://MensajesPortClon04";
            }else{
                systemId = "http://MensajesPortDesa";
            }
            url = new URL(urlBase,systemId);            
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MENSAJESWS_WSDL_LOCATION = url;
        MENSAJESWS_EXCEPTION = e;
    }

    public MensajesWS_Service() {
        super(__getWsdlLocation(), MENSAJESWS_QNAME);
    }

    public MensajesWS_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), MENSAJESWS_QNAME, features);
    }

    public MensajesWS_Service(URL wsdlLocation) {
        super(wsdlLocation, MENSAJESWS_QNAME);
    }

    public MensajesWS_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MENSAJESWS_QNAME, features);
    }

    public MensajesWS_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MensajesWS_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns MensajesWS
     */
    @WebEndpoint(name = "MensajesWSSoap12HttpPort")
    public MensajesWS getMensajesWSSoap12HttpPort() {
        return super.getPort(new QName("http://view.backing.consultas.consultaMensaje/", "MensajesWSSoap12HttpPort"),
                             MensajesWS.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MensajesWS
     */
    @WebEndpoint(name = "MensajesWSSoap12HttpPort")
    public MensajesWS getMensajesWSSoap12HttpPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://view.backing.consultas.consultaMensaje/", "MensajesWSSoap12HttpPort"),
                             MensajesWS.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MENSAJESWS_EXCEPTION != null) {
            throw MENSAJESWS_EXCEPTION;
        }
        return MENSAJESWS_WSDL_LOCATION;
    }

}
